Index: JakSim/src/main/java/com/twinkle/JakSim/controller/scheduleList/SchedulerMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.twinkle.JakSim.controller.scheduleList;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.security.core.GrantedAuthority;\r\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\r\nimport org.springframework.security.core.userdetails.User;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@Controller\r\n@RequestMapping(\"/scheduler\")\r\n@RequiredArgsConstructor\r\npublic class SchedulerMain {\r\n\r\n    @GetMapping()\r\n    public String scheduler(@AuthenticationPrincipal User user) {\r\n        String isUser = \"ROLE_USER\";\r\n\r\n        for(GrantedAuthority authority : user.getAuthorities()){\r\n            String authorityString = authority.getAuthority();\r\n\r\n            if(authorityString.contains(isUser)){\r\n                return \"content/scheduleList/generalScheduleList\";\r\n            }\r\n        }\r\n\r\n        return \"content/scheduleList/trainerScheduleList\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JakSim/src/main/java/com/twinkle/JakSim/controller/scheduleList/SchedulerMain.java b/JakSim/src/main/java/com/twinkle/JakSim/controller/scheduleList/SchedulerMain.java
--- a/JakSim/src/main/java/com/twinkle/JakSim/controller/scheduleList/SchedulerMain.java	(revision fa3fcb2c45713aa90c1ad7a5f001c4cb059a35e4)
+++ b/JakSim/src/main/java/com/twinkle/JakSim/controller/scheduleList/SchedulerMain.java	(date 1689426537489)
@@ -13,13 +13,13 @@
 @RequiredArgsConstructor
 public class SchedulerMain {
 
-    @GetMapping()
+    @GetMapping("")
     public String scheduler(@AuthenticationPrincipal User user) {
         String isUser = "ROLE_USER";
 
         for(GrantedAuthority authority : user.getAuthorities()){
             String authorityString = authority.getAuthority();
-
+            System.out.println(authorityString);
             if(authorityString.contains(isUser)){
                 return "content/scheduleList/generalScheduleList";
             }
Index: JakSim/src/main/java/com/twinkle/JakSim/model/service/payment/KakaoPayService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.twinkle.JakSim.model.service.payment;\r\n\r\nimport com.twinkle.JakSim.model.dto.payment.request.PaymentRequest;\r\nimport com.twinkle.JakSim.model.dto.payment.response.ApproveResponse;\r\nimport com.twinkle.JakSim.model.dto.payment.response.CancelResponse;\r\nimport com.twinkle.JakSim.model.dto.payment.response.ReadyResponse;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.http.HttpEntity;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.client.ClientHttpResponse;\r\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.springframework.util.LinkedMultiValueMap;\r\nimport org.springframework.util.MultiValueMap;\r\nimport org.springframework.web.client.DefaultResponseErrorHandler;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\nimport java.io.IOException;\r\n\r\n@Service\r\n@RequiredArgsConstructor\r\n@Transactional\r\npublic class KakaoPayService {\r\n\r\n    static final String cid = \"TC0ONETIME\"; // 가맹점 테스트 코드\r\n    static final String admin_Key = \"${ADMIN_KEY}\";\r\n    private ReadyResponse kakaoReady;\r\n\r\n    // 카카오 요구 헤더값\r\n    private HttpHeaders getHeaders() {\r\n        HttpHeaders httpHeaders = new HttpHeaders();\r\n\r\n        String auth = \"KakaoAK \" + admin_Key;\r\n\r\n        httpHeaders.set(\"Authorization\", auth);\r\n        httpHeaders.set(\"Content-type\", \"application/x-www-form-urlencoded;charset=utf-8\");\r\n\r\n        return httpHeaders;\r\n    }\r\n\r\n    // 결제 요청\r\n    public ReadyResponse kakaoPayReady(String userId, PaymentRequest paymentRequest) {\r\n        MultiValueMap<String, String> parameters = new LinkedMultiValueMap<>();         // 카카오페이 요청 양식\r\n\r\n        parameters.add(\"cid\", cid);                                                     // 가맹점 코드\r\n        parameters.add(\"partner_order_id\", \"1234\");                                     // 가맹점 주문 번호\r\n        parameters.add(\"partner_user_id\", userId);                                      // 가맹점 회원 ID\r\n        parameters.add(\"item_name\", String.valueOf(paymentRequest.getPtTitle()));       // 상품명\r\n        parameters.add(\"item_code\", String.valueOf(paymentRequest.getTpIdx()));         // 상품 코드\r\n        parameters.add(\"quantity\", \"1\");                                                // 상품 개수\r\n        parameters.add(\"total_amount\", String.valueOf(paymentRequest.getPtPrice()));    // 총 금액\r\n        parameters.add(\"vat_amount\", \"0\");                                              // 부가세\r\n        parameters.add(\"tax_free_amount\", \"0\");                                         // 상품 비과세 금액\r\n        parameters.add(\"approval_url\", \"http://localhost:8080/payment/success\");        // 성공 시 redirect url\r\n        parameters.add(\"cancel_url\", \"http://localhost:8080/payment/cancel\");           // 취소 시 redirect url\r\n        parameters.add(\"fail_url\", \"http://localhost:8080/payment/fail\");               // 실패 시 redirect url\r\n\r\n        // 파라미터, 헤더\r\n        HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(parameters, this.getHeaders());\r\n\r\n        // 외부에 보낼 url\r\n        RestTemplate restTemplate = new RestTemplate();\r\n        restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());\r\n\r\n        restTemplate.setErrorHandler(new DefaultResponseErrorHandler() {\r\n            public boolean hasError(ClientHttpResponse response) throws IOException {\r\n                HttpStatus statusCode = response.getStatusCode();\r\n                return statusCode.series() == HttpStatus.Series.SERVER_ERROR;\r\n            }\r\n        });\r\n\r\n        kakaoReady = restTemplate.postForObject(\"https://kapi.kakao.com/v1/payment/ready\",\r\n                                                                                requestEntity, ReadyResponse.class);\r\n        kakaoReady.setPtTimes(paymentRequest.getPtTimes());\r\n        kakaoReady.setPtPeriod(paymentRequest.getPtPeriod());\r\n\r\n        return kakaoReady;\r\n    }\r\n\r\n    // 결제 완료 승인\r\n    public ApproveResponse approveResponse(String userId, String pgToken) {\r\n        MultiValueMap<String, String> parameters = new LinkedMultiValueMap<>();\r\n\r\n        parameters.add(\"cid\", cid);\r\n        parameters.add(\"tid\", kakaoReady.getTid());\r\n        parameters.add(\"partner_order_id\", \"1234\");\r\n        parameters.add(\"partner_user_id\", userId);\r\n        parameters.add(\"pg_token\", pgToken);\r\n\r\n        // 파라미터, 헤더\r\n        HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(parameters, this.getHeaders());\r\n\r\n        // 외부에 보낼 url\r\n        RestTemplate restTemplate = new RestTemplate();\r\n\r\n        ApproveResponse approveResponse = restTemplate.postForObject(\"https://kapi.kakao.com/v1/payment/approve\",\r\n                requestEntity, ApproveResponse.class);\r\n\r\n        approveResponse.setPtTimes(kakaoReady.getPtTimes());\r\n        approveResponse.setPtPeriod(kakaoReady.getPtPeriod());\r\n\r\n        return approveResponse;\r\n    }\r\n\r\n    /**\r\n     * 결제 환불\r\n     */\r\n    public CancelResponse kakaoCancel() {\r\n        MultiValueMap<String, String> parameters = new LinkedMultiValueMap<>();\r\n\r\n        parameters.add(\"cid\", cid);\r\n        parameters.add(\"tid\", \"환불할 결제 고유 번호\");\r\n        parameters.add(\"cancel_amount\", \"환불 금액\");\r\n        parameters.add(\"cancel_tax_free_amount\", \"환불 비과세 금액\");\r\n        parameters.add(\"cancel_vat_amount\", \"환불 부가세\");\r\n\r\n        // 파라미터, 헤더\r\n        HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(parameters, this.getHeaders());\r\n\r\n        // 외부에 보낼 url\r\n        RestTemplate restTemplate = new RestTemplate();\r\n\r\n        CancelResponse cancelResponse = restTemplate.postForObject(\"https://kapi.kakao.com/v1/payment/cancel\",\r\n                                                                                requestEntity, CancelResponse.class);\r\n\r\n        return cancelResponse;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JakSim/src/main/java/com/twinkle/JakSim/model/service/payment/KakaoPayService.java b/JakSim/src/main/java/com/twinkle/JakSim/model/service/payment/KakaoPayService.java
--- a/JakSim/src/main/java/com/twinkle/JakSim/model/service/payment/KakaoPayService.java	(revision fa3fcb2c45713aa90c1ad7a5f001c4cb059a35e4)
+++ b/JakSim/src/main/java/com/twinkle/JakSim/model/service/payment/KakaoPayService.java	(date 1689426537477)
@@ -25,7 +25,8 @@
 public class KakaoPayService {
 
     static final String cid = "TC0ONETIME"; // 가맹점 테스트 코드
-    static final String admin_Key = "${ADMIN_KEY}";
+//    static final String admin_Key = "${ADMIN_KEY}";
+    static final String admin_Key = "04b96e410ef97e9ba8dfe96ea57746bf"; // 공개 조심! 본인 애플리케이션의 어드민 키를 넣어주세요
     private ReadyResponse kakaoReady;
 
     // 카카오 요구 헤더값
